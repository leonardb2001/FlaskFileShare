
import sqlite3
class Database:

    def __init__(self):

        self.connection = sqlite3.connect('ffs.db')
        self.cursor = self.connection.cursor()

    def createDB(self):
        try:

            self.query = '''CREATE TABLE IF NOT EXISTS files (
                    id TEXT PRIMARY KEY,
                    path TEXT NOT NULL,
                    name TEXT NOT NULL,
                    uid TEXT NOT NULL,
                    date INTEGER NOT NULL
                    );'''
            self.cursor.execute(self.query)
            self.query = '''CREATE TABLE IF NOT EXISTS users (
                    uid TEXT PRIMARY KEY,
                    uname TEXT NOT NULL,
                    email TEXT NOT NULL UNIQUE,
                    pw_hash TEXT NOT NULL,
                    date INTEGER NOT NULL
                    )'''
            self.cursor.execute(self.query)
            self.cursor.close()
        except Exception as e:
            print("Fehler:", e)

    def addUser(self,user_json):

        #This method will take a json string and make a database entry for a new user from it
        #This includes generating a user id with UUID and salting and hashing the password before saving

        pass

    def getUser(self,uid):

        #Takes the id of an existing user (probably gonna be generated by UUID) as an argument and returns all database columns of him

        try:

            self.query = '''SELECT * FROM users WHERE uid = ?'''

            self.cursor.execute(self.query,(uid,))

            return self.cursor.fetchall()

        except Exception as e:

            return e;

    def getAllUserUploads(self, author):

        #Takes the id of an existing user (probably gonna be generated by UUID) as an argument and returns all information about all his uploaded files

        try:

            self.query = '''SELECT * FROM files WHERE author = ?'''

            self.cursor.execute(self.query,(author,))

            return self.cursor.fetchall()

        except Exception as e:

            return e;

    def getFile(self, id):

        #Takes the id of an existing file (probably gonna be generated by UUID) as an argument and returns all database columns of him

        try:

            self.query = '''SELECT * FROM files WHERE id = ?'''

            self.cursor.execute(self.query,(id,))

            return self.cursor.fetchall()

        except Exception as e:

            return e;
